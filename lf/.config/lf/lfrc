# Basic vars

# set shell sh
# set shellopts '-eu'
# set ifs "\n"
# set drawbox # Borders

set info size:time
set scrolloff 8
set icons true
set ignorecase true
set hidden false
set dircounts on

set previewer ~/.config/lf/previewer.sh
set cleaner ~/.config/lf/clear_img.sh

cmd open ${{
  case $(file --mime-type "$(readlink -f $f)" -b) in
    image/vnd.djvu|application/pdf|application/octet-stream) setsid -f zathura $fx >/dev/null 2>&1 ;;
    text/*|application/json|inode/x-empty) $EDITOR $fx;;
    image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
    image/svg+xml) display -- $f ;;
    image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" | sxiv -aio 2>/dev/null | lf-select ;;
    audio/*) mpv --audio-display=no $f ;;
    video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) libreoffice $fx >/dev/null 2>&1;;
    application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
    application/pgp-encrypted) $EDITOR $fx ;;
    *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
  esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"
map <c-n> push :mkdir<space>

cmd touch $touch "$(echo $* | tr ' ' '\ ')"
map a push :touch<space>

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && ext $fx
}}
map E extract

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && mv $fx ~/.Trash
}}
map D delete

cmd purge ${{
	yes | rm -r $fx
}}
map <c-d> purge

cmd setbg "$1"
map b $setbg $f

cmd bulkrename $vidir
map B bulkrename

cmd yank-basename-without-extension &basename -a -- $fx | rev | cut -d. -f2- | rev | head -c-1 | xclip -i -selection clipboard
map Y yank-basename-without-extension

map <enter> shell

map x $$f #Execute file
map X !$f

map <space> :toggle

map <c-f> $lf -remote "send $id select '$(fzf)'" # Fuzzy Find file

map <c-r> reload

map . set hidden!

map V push :!nvim<space>

# Renames
map r :rename; cmd-word-back; cmd-left
map <bakcspace> :rename; cmd-word-back; cmd-left  
map <backspace2> :rename; cmd-word-back; cmd-left 

# Source Bookmarks
source "~/.config/lf/shortcutrc"
