#!/bin/sh

# Prints the current volume or ðŸ”‡ if muted.

case $BLOCK_BUTTON in
	1) setsid -f "$TERMINAL" -e pulsemixer ;;
	2) pamixer -t ;;
	4) pamixer --allow-boost -i 1 ;;
	5) pamixer --allow-boost -d 1 ;;
	3) notify-send "ðŸ“¢ Volume module" "\- Shows volume ðŸ”Š, ðŸ”‡ if muted.
- Middle click to mute.
- Scroll to change." ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac


# if [ $(pamixer --get-mute) = true ]; then
#   icon="ï‘¦"
#   printf "$icon"
#   exit
# fi
#
# vol="$(pamixer --get-volume)"
#
# if [ "$vol" -gt "70" ]; then
# 	icon="ï’…"
# elif [ "$vol" -lt "30" ]; then
# 	icon="ï’…"
# else
#   icon="ï’…"
# fi
#
# # echo $vol
# # vol_icon="$icon ^c#f7ca88^$vol%^d^"
# # printf "$vol_icon"
# printf "$icon ^c#f7ca88^$vol%%^d^"
vol="$(wpctl get-volume @DEFAULT_AUDIO_SINK@)"

# If muted, print ðŸ”‡ and exit.
[ "$vol" != "${vol%\[MUTED\]}" ] && echo ï‘¦ && exit

vol="${vol#Volume: }"
split() {
	# For ommiting the . without calling and external program.
	IFS=$2
	set -- $1
	printf '%s' "$@"
}
vol="$(split "$vol" ".")"
vol="${vol##0}"

case 1 in
	$((vol >= 70)) ) icon="ï’…" ;;
	$((vol >= 30)) ) icon="ï’…" ;;
	$((vol >= 1)) ) icon="ï’…" ;;
	* ) echo ï‘¦ && exit ;;
esac

# echo "$icon$vol%"

printf "$icon ^c#f7ca88^$vol%%^d^"
