#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BLOCK_BUTTON in
    3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
        - Scroll to change adjust xbacklight." ;;
    4) xbacklight -inc 10 ;;
    5) xbacklight -dec 10 ;;
    6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
    # If non-first battery, print a space separator.
    [ -n "${capacity+x}" ] && printf " "
    # Sets up the status and capacity
    capacity=$(cat "$battery/capacity")
    case "$(cat "$battery/status")" in
        "Full") status="^c#8ec07c^⚡" ;;
        "Discharging")
            status="^c#8ec07c^  "
            if [ "$capacity" -le 80 ]; then
                status="^c#8ec07c^  "
            fi
            if [ "$capacity" -le 60 ]; then
                status="^c#fabd2f^  "
            fi
            if [ "$capacity" -le 40 ]; then
                status="^c#fe8019^  "
            fi
            if [ "$capacity" -le 20 ]; then
                status="^c#fb4934^  "
            fi
            ;;
        "Charging") status=" " ;;
        "Not charging") status="^c#fb4934^ " ;;
        "Unknown") status=" " ;;
    esac
    # Prints the info
    if [ -d "/sys/class/power_supply/BAT0" ]; then
        printf "%s^c#f7ca88^%d%%^d^" "$status" "$capacity"
    fi
done && exit 0
