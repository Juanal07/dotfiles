#!/bin/sh

intern=eDP1
extern=HDMI2

file="$HOME/.local/bin/juan/monitor-state.txt"  # Move to /tmp
state=$(cat "$file") # Retrieve last index
state=$((++state % 4)) # Range 0-3
echo $state > $file # Store the new state

try_monitor() {
  if xrandr | grep "$extern disconnected"; 

  # Laptop
  then
    xrandr --output "$extern" --off --output "$intern" --auto
    xrdb -merge ${XDG_CONFIG_HOME:-$HOME/.config}/x11/xresources_laptop
    dunstify "💻 Laptop" -t 2000

  # Monitor
  else
    # xrandr --output "$intern" --off --output "$extern" --auto
    xrandr --output "$intern" --off --output "$extern" --mode 3440x1440

    xrdb -merge ${XDG_CONFIG_HOME:-$HOME/.config}/x11/xresources_laptop_station
    dunstify "🖥️ Monitor" -t 4000
  fi
}

laptop() {
  xrandr --output "$extern" --off --output "$intern" --auto
  xrdb -merge ${XDG_CONFIG_HOME:-$HOME/.config}/x11/xresources_laptop
  dunstify "💻 Laptop" -t 2000
}

extend() {
  xrandr --output "$extern" --primary --auto --output "$intern" --right-of "$extern" --auto
  dunstify "🔗 Extend" -t 2000
}

duplicate() {
  xrandr --output "$extern" --auto --same-as "$intern" --auto
  dunstify "🪞 Duplicate" -t 2000
}

case $state in
  0)
    laptop
    ;;
  1)
    try_monitor
    ;;
  2)
    extend
    ;;
  3)
    duplicate
    ;;
  *)
    laptop
    ;;
esac

# Laptop
# xrandr --output eDP1 --auto --output HDMI2 --off

# Station with monitor
# xrandr --output eDP1 --off --output HDMI2 --auto
#
# Extended
# xrandr --output "$extern" --primary --auto --output "$intern" --left-of "$extern" --auto
#
# Duplicate
# xrandr --output "$extern" --auto --same-as "$intern" --auto
